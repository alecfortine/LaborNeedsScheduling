@using System
@using System.Collections.Generic
@using System.Linq
@using System.Web
@using System.Web.Mvc
@using System.Data.SqlClient
@using System.Data
@using System.Configuration
@using System.Text
@using System.Diagnostics;
@using System.Web.UI.HtmlControls;
@using LaborNeedsScheduling.Models
@model EmployeeModel

<head>

    @*lightbox*@
    <style>
        .black_overlay {
            display: none;
            position: fixed;
            top: 0%;
            left: 0%;
            width: 100%;
            height: 100%;
            background-color: #ff0000;
            z-index: 1001;
            -moz-opacity: 0.8;
            opacity: .80;
            filter: alpha(opacity=80);
        }

        .white_content {
            position: fixed;
            top: 10%;
            left: 25%;
            z-index: 1050;
            width: 80%;
            height: 80%;
            margin-left: -280px;
            background-color: #ffffff;
            -webkit-border-radius: 20px;
            -moz-border-radius: 20px;
            border-radius: 20px;
            border: 2px solid #FFFFFF;
            background-color: #FFFFFF;
            -webkit-box-shadow: #000000 8px 8px 8px;
            -moz-box-shadow: #000000 8px 8px 8px;
            box-shadow: #000000 8px 8px 8px;
            display: none;
        }

        .white-header {
            padding: 9px 15px;
            border-bottom: 1px solid #eee;
            height: 30px;
        }

        .modal-header .close {
            margin-top: 2px;
        }

        a.close {
            padding: 0;
            cursor: pointer;
            border: 0;
            -webkit-appearance: none;
        }

        .close {
            float: right;
            font-size: 20px;
            font-weight: bold;
            line-height: 20px;
        }

        /*.white-body {
            position: relative;
            max-height: 850px;
            padding: 15px;
            overflow-y: auto;
            display: block;
        }*/
    </style>

    @*messages*@
    <style>
        .approved {
            padding: 20px;
            background-color: #8fff9a;
            color: black;
            border-style: solid;
            border-color: black;
            border-width: .5px;
        }

        .denied {
            padding: 20px;
            background-color: #ff6868;
            color: black;
            border-style: solid;
            border-color: black;
            border-width: .5px;
        }

        .closebtn:hover {
            color: black;
        }

        .closebtn {
            margin-left: 30px;
            color: #000000;
            font-weight: bold;
            float: right;
            font-size: 30px;
            line-height: 20px;
            cursor: pointer;
            transition: 0.3s;
        }
    </style>

    <style>
        .inline {
            display: inline-block;
            margin-right: 15px;
        }

        .hidden {
            display: inline-block;
            margin-right: 15px;
            visibility: hidden;
        }

        .visible {
            display: inline-block;
            margin-right: 15px;
            visibility: visible;
        }
    </style>

    @*messages dropdown*@
    <style>
        input.messages {
            display: none;
            visibility: hidden;
        }

        label.messages {
            display: block;
            padding: 0.5em;
            text-align: center;
            border-bottom: 1px solid #CCC;
            color: #666;
        }

            label.messages:hover {
                color: #000;
            }

            label.messages::after {
                font-family: Consolas, monaco, monospace;
                font-weight: bold;
                font-size: 15px;
                content: "▼";
                vertical-align: text-top;
                display: inline-block;
                width: 20px;
                height: 20px;
                margin-left: 3.5px;
                background: radial-gradient(ellipse at center, #CCC 50%, transparent 50%);
            }

        #expandMessages {
            height: 0px;
            overflow: auto;
            transition: height 0.5s;
            color: #FFF;
        }

        section {
            padding: 0 20px;
        }

        #messagesToggle:checked ~ #expandMessages {
            height: auto;
        }

        #messagesToggle:checked ~ label::after {
            content: "-";
        }
    </style>

    @*table*@
    <style>
        table {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            width: 1100px;
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
            table-layout: fixed;
            word-break: break-all;
            margin-left: auto;
            margin-right: auto;
            empty-cells: show;
            /*overflow-y: no-display;*/
        }

        td, th {
            border: 1px solid #dddddd;
            padding: 8px;
            text-align: center;
            vertical-align: middle;
            border: 1px solid #000000;
        }

            td:first-child {
                font-weight: bold;
                text-align: left;
            }

            td.hourCell {
                font-size: 11px;
            }

        /*.container {
            align-content: center;
            margin: 0;
        }*/

        .left-element {
            display: inline;
            float: left;
        }

        .right-element {
            display: inline;
            float: right;
            padding-right: 50px;
        }

        body {
            vertical-align: middle;
        }

        .testing-left {
            display: inline;
            float: left;
            padding: 5px;
            border-style: solid;
            border-width: 1px;
            text-align: center;
            font-size: 70%;
        }

        td:first-child {
            background-color: white;
        }
    </style>

    @*multiple days request*@
    <style>
        input.requestMultiple {
            display: none;
            visibility: hidden;
        }

        label.requestMultiple {
            display: block;
            padding: 0.5em;
            text-align: left;
            border-bottom: 1px solid #CCC;
            color: #666;
        }

            label.requestMultiple:hover {
                color: #000;
            }

            label.requestMultiple::after {
                font-family: Consolas, monaco, monospace;
                font-weight: bold;
                font-size: 15px;
                content: "▼";
                vertical-align: text-top;
                display: inline-block;
                width: 20px;
                height: 20px;
                margin-left: 3px;
            }

        #expandMultiple {
            height: 0px;
            overflow: auto;
            transition: height 0.5s;
            color: #000000;
        }

        section {
            padding: 0 20px;
        }

        #requestToggleMultiple:checked ~ #expandMultiple {
            height: auto;
        }

        #requestToggleMultiple:checked ~ label::after {
            content: "▼";
        }
    </style>

    @*single day request*@
    <style>
        input.requestSingle {
            display: none;
            visibility: hidden;
        }

        label.requestSingle {
            display: block;
            padding: 0.5em;
            text-align: left;
            border-bottom: 1px solid #CCC;
            color: #666;
        }

            label.requestSingle:hover {
                color: #000;
            }

            label.requestSingle::after {
                font-family: Consolas, monaco, monospace;
                font-weight: bold;
                font-size: 15px;
                content: "▼";
                vertical-align: text-top;
                display: inline-block;
                width: 20px;
                height: 20px;
                margin-left: 3px;
            }

        #expandSingle {
            height: 0px;
            overflow: auto;
            transition: height 0.5s;
            color: #000000;
        }

        section {
            padding: 0 20px;
        }

        #requestToggleSingle:checked ~ #expandSingle {
            height: auto;
        }

        #requestToggleSingle:checked ~ label::after {
            content: "▼";
        }
    </style>

</head>

<br />

<h1>Time-Off Request</h1>

<br />
<br />
<br />
<br />

<input id="requestToggleSingle" type="checkbox" class="requestSingle">
<label for="requestToggleSingle" class="requestSingle">Specific Day</label>
<div id="expandSingle">
    <section>
        @*@using (Html.BeginForm("TimeOffRequest", "Home", FormMethod.Post))
            {*@
        <form name="SubmitRequest" action="TimeOffRequest" method="post">

            <text>Enter Employee ID Number:</text>
            <br />
            @Html.TextBoxFor(m => m.employeeId, new { id = "EmployeeId1", autocomplete = "off" })

            <br />
            <br />

            <div style="display:inline-block">
                <div style="border:solid; border-width:1px; display: inline; float:left; padding:20px;">
                    <div class="inline">
                        @Html.DropDownListFor(m => Model.startDate, new SelectList(Model.startDates), new { id = "startDate1" })
                    </div>

                    <div class="inline">
                        @Html.CheckBoxFor(m => Model.allDayCheck, new { id = "dayCheck", onchange = "change_checkbox(this)" })
                        <label>All Day</label>
                    </div>

                    <div class="visible">
                        <label>Start:</label>
                        @Html.DropDownListFor(m => Model.startTime, new SelectList(Model.startTimes), new { id = "startTime" })
                    </div>

                    <div class="visible">
                        <label>End: </label>
                        @Html.DropDownListFor(m => Model.endTime, new SelectList(Model.endTimes), new { id = "endTime" })
                    </div>

                    <div class="inline">
                        <button type="button" onclick="validateEmployeeId(0)">Submit</button><br>
                    </div>
                </div>
            </div>
        </form>
        @*}*@
    </section>
</div>

<br />
<br />

<input id="requestToggleMultiple" type="checkbox" class="requestMultiple">
<label for="requestToggleMultiple" class="requestMultiple">Multiple Days</label>
<div id="expandMultiple">
    <section>
        @using (Html.BeginForm("TimeOffRequest", "Home", FormMethod.Post))
        {
            <text>Enter Employee ID Number:</text>
            <br />
            @Html.TextBoxFor(m => m.employeeId, new { id = "EmployeeId2", autocomplete = "off" })

            <br />
            <br />

            <div style="display:inline-block">
                <div style="border:solid; border-width:1px; display: inline; float:left; padding:20px;">
                    <div class="inline">
                        @Html.DropDownListFor(m => Model.startDate, new SelectList(Model.startDates), new { id = "startDate2" })
                    </div>
                    <label>-</label>
                    <div class="inline" style="margin-left:15px;">
                        @Html.DropDownListFor(m => Model.endDate, new SelectList(Model.endDates), new { id = "endDate" })
                    </div>
                    @{ string type = "multiple";}
                    <div class="inline">
                        <button type="button" onclick="validateEmployeeId(1)">Submit</button><br>
                    </div>
                </div>
            </div>
                        }
    </section>
</div>

<br />
<br />

@section scripts{

    <script>
        function validateEmployeeId(type) {
            var EmployeeList = @Html.Raw(Json.Encode(Model.ListOfEmployees));
            var check = 0;

            // type determines a single day or multiple days
            if(type == 0){
                var employeeId = document.getElementById('EmployeeId1').value;
                for(i = 0; i < EmployeeList.length; i++){
                    var id = EmployeeList[i].id;
                    if(employeeId == id){
                        check = 1;
                    }
                }
                if(check == 0){
                    alert('Employee ID not found for current store');
                }
                else if(check == 1){
                    var StartDate = document.getElementById('startDate1').value;
                    var StartTime = document.getElementById('startTime').value;
                    var EndTime = document.getElementById('endTime').value;
                    var AllDay = document.getElementById('dayCheck').checked;

                    // make sure the start time comes before the end time
                    var TimeCheck = 1;
                    var StartTimes = @Html.Raw(Json.Encode(Model.startTimes));
                    var EndTimes = @Html.Raw(Json.Encode(Model.endTimes));

                    var startpos = 0;
                    var endpos = 0;
                    for(i = 0; i < StartTimes.length; i++){
                        if(StartTimes[i] == StartTime){
                            startpos = i;
                        }
                    }
                    for(i = 0; i < EndTimes.length; i++){
                        if(EndTimes[i] == EndTime){
                            endpos = i;
                        }
                    }
                    if(startpos > endpos){
                        TimeCheck = 0;
                    }

                    alert(startpos);
                    alert(endpos);
                    alert(TimeCheck);

                    if(TimeCheck == 0){
                        alert('The start time must come before the end time')
                    }
                    else{
                        var model = @Html.Raw(Json.Encode(Model));
                        model.Id = employeeId
                        model.startDate = StartDate;
                        model.startTime = StartTime;
                        model.endTime = EndTime;
                        model.allDayCheck = AllDay;

                        $.post('/Home/TimeOffRequest',
                        {
                            TimeOff: model,
                            employeeId: employeeId
                        },
                        function (data){
                            alert('Request submitted');
                        }
                        );
                    }
                }
            }
            else if(type == 1){
                var employeeId = document.getElementById('EmployeeId2').value;
                for(i = 0; i < EmployeeList.length; i++){
                    var id = EmployeeList[i].id;
                    if(employeeId == id){
                        check = 1;
                    }
                }
                if(check == 0){
                    alert('Employee ID not found for current store');
                }
                else if(check == 1){
                    var StartDate = document.getElementById('startDate2').value;
                    var EndDate = document.getElementById('endDate').value;

                    // make sure the start date comes before the end date
                    var DateCheck = 1;
                    var StartDates = @Html.Raw(Json.Encode(Model.startDates));
                    var EndDates = @Html.Raw(Json.Encode(Model.endDates));

                    var startpos = 0;
                    var endpos = 0;
                    for(i = 0; i < StartDates.length; i++){
                        if(StartDates[i] == StartDate){
                            startpos = i;
                        }
                    }
                    for(i = 0; i < EndDates.length; i++){
                        if(EndDates[i] == EndDate){
                            endpos = i;
                        }
                    }
                    if(startpos > endpos){
                        DateCheck = 0;
                    }

                    if(DateCheck == 0){
                        alert('The start date must come before the end date')
                    }

                    var model = @Html.Raw(Json.Encode(Model));
                    model.Id = employeeId
                    model.startDate = StartDate;
                    model.endDate = EndDate;

                    $.post('/Home/TimeOffRequest',
                    {
                        TimeOff: model,
                        employeeId: employeeId
                    },
                    function (data){
                        alert('Request submitted');
                    }
                    );
                }
            }
        }
    </script>

    @*<script>
           $("SubmitRequest").submit(function() {
               var employeeId = $("#employeeIdTextbox").val();
               $("#hiddenEmployeeId").val(employeeId);
             return true;
          });
        </script>*@

    @*<script>
            function SubmitRequest() {
                $.post('/Home/TimeOffRequest',
        {
            employeeId: ,
        },
        function (data) {
            $('#AssignmentTablePartial').html(data);
        }
        );
                alert('Employee assigned');
            }
        </script>*@
}