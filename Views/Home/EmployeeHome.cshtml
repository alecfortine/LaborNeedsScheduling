@using System
@using System.Collections.Generic
@using System.Linq
@using System.Web
@using System.Web.Mvc
@using System.Data.SqlClient
@using System.Data
@using System.Configuration
@using System.Text
@using System.Diagnostics;
@using System.Web.UI.HtmlControls;
@using LaborNeedsScheduling.Models
@model EmployeeModel


@{
    ViewBag.Title = "Employee";
}

<head>

    @*lightbox*@
    <style>
        .black_overlay {
            display: none;
            position: fixed;
            top: 0%;
            left: 0%;
            width: 100%;
            height: 100%;
            background-color: #ff0000;
            z-index: 1001;
            -moz-opacity: 0.8;
            opacity: .80;
            filter: alpha(opacity=80);
        }

        .white_content {
            position: fixed;
            top: 10%;
            left: 25%;
            z-index: 1050;
            width: 80%;
            height: 80%;
            margin-left: -280px;
            background-color: #ffffff;
            -webkit-border-radius: 20px;
            -moz-border-radius: 20px;
            border-radius: 20px;
            border: 2px solid #FFFFFF;
            background-color: #FFFFFF;
            -webkit-box-shadow: #000000 8px 8px 8px;
            -moz-box-shadow: #000000 8px 8px 8px;
            box-shadow: #000000 8px 8px 8px;
            display: none;
        }

        .white-header {
            padding: 9px 15px;
            border-bottom: 1px solid #eee;
            height: 30px;
        }

        .modal-header .close {
            margin-top: 2px;
        }

        a.close {
            padding: 0;
            cursor: pointer;
            border: 0;
            -webkit-appearance: none;
        }

        .close {
            float: right;
            font-size: 20px;
            font-weight: bold;
            line-height: 20px;
        }

        /*.white-body {
            position: relative;
            max-height: 850px;
            padding: 15px;
            overflow-y: auto;
            display: block;
        }*/
    </style>

    @*messages*@
    <style>
        .approved {
            padding: 20px;
            background-color: #8fff9a;
            color: black;
        }

        .denied {
            padding: 20px;
            background-color: #ff6868;
            color: black;
        }

        .closebtn {
            margin-left: 15px;
            color: white;
            font-weight: bold;
            float: right;
            font-size: 22px;
            line-height: 20px;
            cursor: pointer;
            transition: 0.3s;
        }

            .closebtn:hover {
                color: black;
            }
    </style>

    <style>
        .inline {
            display: inline-block;
            margin-right: 15px;
        }

        .hidden {
            display: inline-block;
            margin-right: 15px;
            visibility: hidden;
        }

        .visible {
            display: inline-block;
            margin-right: 15px;
            visibility: visible;
        }
    </style>

    @*messages dropdown*@
    <style>
        input.messages {
            display: none;
            visibility: hidden;
        }

        label.messages {
            display: block;
            padding: 0.5em;
            text-align: center;
            border-bottom: 1px solid #CCC;
            color: #666;
        }

            label.messages:hover {
                color: #000;
            }

            label.messages::after {
                font-family: Consolas, monaco, monospace;
                font-weight: bold;
                font-size: 15px;
                content: "▼";
                vertical-align: text-top;
                display: inline-block;
                width: 20px;
                height: 20px;
                margin-left: 3.5px;
                background: radial-gradient(ellipse at center, #CCC 50%, transparent 50%);
            }

        #expandMessages {
            height: 0px;
            overflow: auto;
            transition: height 0.5s;
            color: #FFF;
        }

        section {
            padding: 0 20px;
        }

        #messagesToggle:checked ~ #expandMessages {
            height: auto;
        }

        #messagesToggle:checked ~ label::after {
            content: "-";
        }
    </style>

    @*table*@
    <style>
        table {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            width: 1100px;
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
            table-layout: fixed;
            word-break: break-all;
            margin-left: auto;
            margin-right: auto;
            empty-cells: show;
            /*overflow-y: no-display;*/
        }

        td, th {
            border: 1px solid #dddddd;
            padding: 8px;
            text-align: center;
            vertical-align: middle;
            border: 1px solid #000000;
        }

            td:first-child {
                font-weight: bold;
                text-align: left;
            }

            td.hourCell {
                font-size: 11px;
            }

        /*.container {
            align-content: center;
            margin: 0;
        }*/

        .left-element {
            display: inline;
            float: left;
        }

        .right-element {
            display: inline;
            float: right;
            padding-right: 50px;
        }

        body {
            vertical-align: middle;
        }

        .testing-left {
            display: inline;
            float: left;
            padding: 5px;
            border-style: solid;
            border-width: 1px;
            text-align: center;
            font-size: 70%;
        }

        td:first-child {
            background-color: white;
        }
    </style>

    @*multiple days request*@
    <style>
        input.requestMultiple {
            display: none;
            visibility: hidden;
        }

        label.requestMultiple {
            display: block;
            padding: 0.5em;
            text-align: left;
            border-bottom: 1px solid #CCC;
            color: #666;
        }

            label.requestMultiple:hover {
                color: #000;
            }

            label.requestMultiple::after {
                font-family: Consolas, monaco, monospace;
                font-weight: bold;
                font-size: 15px;
                content: "▼";
                vertical-align: text-top;
                display: inline-block;
                width: 20px;
                height: 20px;
                margin-left: 3px;
            }

        #expandMultiple {
            height: 0px;
            overflow: auto;
            transition: height 0.5s;
            color: #000000;
        }

        section {
            padding: 0 20px;
        }

        #requestToggleMultiple:checked ~ #expandMultiple {
            height: auto;
        }

        #requestToggleMultiple:checked ~ label::after {
            content: "▼";
        }
    </style>

    @*single day request*@
    <style>
        input.requestSingle {
            display: none;
            visibility: hidden;
        }

        label.requestSingle {
            display: block;
            padding: 0.5em;
            text-align: left;
            border-bottom: 1px solid #CCC;
            color: #666;
        }

            label.requestSingle:hover {
                color: #000;
            }

            label.requestSingle::after {
                font-family: Consolas, monaco, monospace;
                font-weight: bold;
                font-size: 15px;
                content: "▼";
                vertical-align: text-top;
                display: inline-block;
                width: 20px;
                height: 20px;
                margin-left: 3px;
            }

        #expandSingle {
            height: 0px;
            overflow: auto;
            transition: height 0.5s;
            color: #000000;
        }

        section {
            padding: 0 20px;
        }

        #requestToggleSingle:checked ~ #expandSingle {
            height: auto;
        }

        #requestToggleSingle:checked ~ label::after {
            content: "▼";
        }
    </style>

</head>

<body>

    <br />
    <br />

    @*<p><button onclick="document.getElementById('light').style.display='block';document.getElementById('fade').style.display='block'">Messages</button></p>*@

    @*<div id="light" class="white_content">*@
    @*<div class="white-header">
            <a class="close" href="javascript:void(0)" onclick="document.getElementById('light').style.display='none';document.getElementById('fade').style.display='none'">x</a>
        </div>*@

    <input id="messagesToggle" type="checkbox" class="messages">
    <label for="messagesToggle" class="messages">@Model.EmployeeNotifications.Count New Messages</label>
    <div id="expandMessages">
        <section>
            @foreach (EmployeeNotification e in Model.EmployeeNotifications)
            {
                if (e.approved == true)
                {
                    <div class="approved">
                        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                        @e.message
                    </div>
                }
                else if (e.approved == false)
                {
                    <div class="denied">
                        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                        @e.message
                    </div>
                }
            }
        </section>
    </div>

    <div class="white-body">
        @if (Model.EmployeeNotifications != null)
        {
            foreach (EmployeeNotification e in Model.EmployeeNotifications)
            {
                if (e.approved == true)
                {
                    <div class="approved">
                        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                        @e.message
                    </div>
                }
                else if (e.approved == false)
                {
                    <div class="denied">
                        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                        @e.message
                    </div>
                }
            }
        }
    </div>
    @*</div>*@
    <div id="fade" class="black_overlay"></div>

    <br />
    <hr />
    <br />

    @*display employee schedule table*@
    <div class="white-body">
        <table border="1" cellpadding="5" id="weekhours" class="weekhours">
            <thead>
                <tr>
                    @foreach (DataColumn col in EmployeeModel.EmployeeSchedule.Columns)
                    {
                        <th id="scheduleCell" class="scheduleCell">@col.Caption</th>
                    }
                </tr>
            </thead>
            <tbody>

                @for (int n = 0; n < EmployeeModel.EmployeeSchedule.Rows.Count - 1; n++)
                {
                    <tr>
                        @for (int h = 0; h < EmployeeModel.EmployeeSchedule.Columns.Count; h++)
                        {
                            if (EmployeeModel.EmployeeSchedule.Rows[n][h].ToString() == "True")
                            {
                                <td id="scheduleCell" class="scheduleCell">♦</td>
                            }
                            else if (EmployeeModel.EmployeeSchedule.Rows[n][h].ToString() == "False")
                            {
                                <td id="scheduleCell" class="scheduleCell"></td>
                            }
                            else
                            {
                                string[] ScheduleHourSlots = { "6AM-7AM", "7AM-8AM","8AM-9AM","9AM-10AM","10AM-11AM","11AM-12PM","12PM-1PM", "1PM-2PM", "2PM-3PM",
                                                           "3PM-4PM","4PM-5PM", "5PM-6PM", "6PM-7PM", "7PM-8PM", "8PM-9PM", "9PM-10PM", "10PM-11PM", "11PM-12AM"};

                                string[] replaceRows = {"6:00AM", "7:00AM","8:00AM","9:00AM","10:00AM","11:00AM","12:00PM", "1:00PM", "2:00PM", "3:00PM",
                                                    "4:00PM", "5:00PM", "6:00PM", "7:00PM", "8:00PM", "9:00PM", "10:00PM", "11:00PM", "12:00AM"};

                                for (int i = 0; i < ScheduleHourSlots.Length; i++)
                                {
                                    if (EmployeeModel.EmployeeSchedule.Rows[n][h].ToString() == ScheduleHourSlots[i])
                                    {
                                        <td id="hourCell" class="hourCell">
                                            @replaceRows[i]
                                            -
                                            <br />
                                            @replaceRows[i + 1]
                                        </td>
                                    }
                                }
                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <br />
    <br />
    <hr />
    <br />

    <h3>Time Off Request:</h3>


    <input id="requestToggleMultiple" type="checkbox" class="requestMultiple">
    <label for="requestToggleMultiple" class="requestMultiple">Multiple Days</label>
    <div id="expandMultiple">
        <section>
            @using (Html.BeginForm("EmployeeHome", "Home", FormMethod.Post))
            {
                <div style="display:inline-block">
                    <div style="border:solid; border-width:1px; display: inline; float:left; padding:20px;">
                        <div class="inline">
                            @Html.DropDownListFor(m => Model.startDate, new SelectList(Model.startDates), new { id = "startDate" })
                        </div>
                        <label>-</label>
                        <div class="inline" style="margin-left:15px;">
                            @Html.DropDownListFor(m => Model.endDate, new SelectList(Model.startDates), new { id = "endDate" })
                        </div>

                        <div class="inline">
                            <button type="submit">Submit</button><br>
                        </div>
                    </div>
                </div>
            }
        </section>
    </div>

    <br />
    <br />

    <input id="requestToggleSingle" type="checkbox" class="requestSingle">
    <label for="requestToggleSingle" class="requestSingle">Specific Day</label>
    <div id="expandSingle">
        <section>
            @using (Html.BeginForm("EmployeeHome", "Home", FormMethod.Post))
            {
                <div style="display:inline-block">
                    <div style="border:solid; border-width:1px; display: inline; float:left; padding:20px;">
                        <div class="inline">
                            @Html.DropDownListFor(m => Model.startDate, new SelectList(Model.startDates), new { id = "startDate" })
                        </div>

                        <div class="inline" id="dayCheck">
                            @Html.CheckBoxFor(m => Model.allDayCheck, new { id = "dayCheck", onchange = "change_checkbox(this)" })
                            <label>All Day</label>
                        </div>

                        <div class="visible" id="startTime">
                            <label>Start:</label>
                            @Html.DropDownListFor(m => Model.startTime, new SelectList(Model.startTimes), new { id = "startTime" })
                        </div>

                        <div class="visible" id="endTime">
                            <label>End: </label>
                            @Html.DropDownListFor(m => Model.endTime, new SelectList(Model.endTimes), new { id = "endTime" })
                        </div>

                        <div class="inline">
                            <button type="submit">Submit</button><br>
                        </div>
                    </div>
                </div>
            }
        </section>
    </div>

    <br />
    <br />
    <br />


</body>

@section scripts
{
    <script>
        var cells = document.querySelectorAll("td");

        for (var i = 0; i < cells.length; i++) {

            $('.scheduleCell:contains("♦")').css('background-color', '#8fff9a');
            $('.scheduleCell:contains("False")').css('background-color', '#ffffff');

        }
    </script>

    @*validate that all inputs are numbers*@
    <script>
        function checkInp() {
            var hours = document.forms["ScheduleForm"]["weeklyHours"].value;
            var min = document.forms["ScheduleForm"]["minEmps"].value;
            var max = document.forms["ScheduleForm"]["maxEmps"].value;
            var weeks = document.forms["ScheduleForm"]["weeks"].value;
            var week1 = document.forms["ScheduleForm"]["week1"].value;

            if (isNaN(hours) || isNaN(min) || isNaN(max) || isNaN(weeks)) {
                alert("Input must be numbers");
                return false;
            }
        }
    </script>

    <script>
        function change_checkbox(dayCheck) {
            if (dayCheck.checked) {
                document.getElementById("startTime").classList.remove('visible');
                document.getElementById("endTime").classList.remove('visible');

                document.getElementById("startTime").classList.add('hidden');
                document.getElementById("endTime").classList.add('hidden');
            } else {
                document.getElementById("startTime").classList.remove('hidden');
                document.getElementById("endTime").classList.remove('hidden');

                document.getElementById("startTime").classList.add('visible');
                document.getElementById("endTime").classList.add('visible');
            }
        }
    </script>
}