@using System
@using System.Collections.Generic
@using System.Linq
@using System.Web
@using System.Web.Mvc
@using System.Data.SqlClient
@using System.Data
@using System.Configuration
@using System.Text
@using System.Diagnostics;
@using System.Web.UI.HtmlControls;
@using System.Data.Entity;
@using LaborNeedsScheduling.Models
@model LaborScheduling


<head>
    @{
        ViewData["Title"] = "Home Page";
    }

    @*tables*@
    <style>
        table.LaborSchedule {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            width: 1100px;
            border: 1px solid #dddddd;
            text-align: left;
            /*padding: 8px;*/
            table-layout: fixed;
            word-break: break-all;
            margin: auto;
            empty-cells: show;
        }

        td.LaborCell, th.LaborCell {
            border: 1px solid #dddddd;
            padding: 8px;
            text-align: center;
            /*vertical-align: middle;*/
            border: 1px solid #000000;
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            cursor: default;
            font-size: 12px;
        }

        .DaySelectionButton {
            width: 100%;
            height: 100%;
            /*background-color: #d2b9ff;
            border-color: #c6a7ff;*/
        }

        td.BlackoutCell {
            background-color: #222222;
            border-color: black;
        }

        table.ExcludedDates {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            /*width: 1100px;*/
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
            table-layout: fixed;
            word-break: break-all;
            margin-left: auto;
            margin-right: auto;
            empty-cells: show;
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        td.ExcludedFalse {
            border: 1px solid #dddddd;
            padding: 8px;
            height: 80px;
            width: 80px;
            text-align: center;
            vertical-align: middle;
            border: 1px solid #000000;
        }

        td.ExcludedTrue {
            border: 1px solid #dddddd;
            padding: 8px;
            height: 80px;
            width: 80px;
            text-align: center;
            vertical-align: middle;
            border: 1px solid #000000;
            background-color: #ff9292;
        }

        td.LaborCell:first-child {
            font-weight: bold;
            text-align: left;
        }

        td.PowerCell, th.PowerCell {
            border: 1px solid #dddddd;
            padding: 8px;
            text-align: center;
            vertical-align: middle;
            border: 1px solid #000000;
            background-color: #66ff89;
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            font-size: 12px;
        }

        td.LowCell, th.LowCell {
            border: 1px solid #dddddd;
            padding: 8px;
            text-align: center;
            vertical-align: middle;
            border: 1px solid #000000;
            background-color: #ff6161;
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        td.ButtonCell {
            padding: 0px;
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        .AssignmentViewContainer {
            margin: 0 -200px 0 -200px;
        }

        table.AssignmentView {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            border: 1px solid #dddddd;
            text-align: left;
            table-layout: fixed;
            word-break: break-all;
            empty-cells: show;
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            margin: 0 auto;
        }

        td.AssignmentCell, th.AssignmentCell {
            border: 1px solid #dddddd;
            padding: 3px;
            text-align: center;
            vertical-align: middle;
            border: 1px solid #000000;
            height: 35px;
            width: 100px;
            font-size: 10px;
        }

            td.AssignmentCell:hover:not(:first-child):not(:last-child) {
                background-color: #c1c1c1;
                font-size: 10px;
            }

            th.AssignmentCell:not(:first-child) {
                white-space: nowrap;
                font-size: 10px;
            }

            td.AssignmentCell:first-child {
                white-space: nowrap;
                font-size: 10px;
            }

        td.AssignmentCellFilled {
            border: 1px solid #dddddd;
            padding: 3px;
            text-align: center;
            vertical-align: middle;
            border: 1px solid #000000;
            height: 50px;
            width: 100px;
            white-space: nowrap;
            background-color: #b0ffad;
            font-size: 10px;
        }

            td.AssignmentCellFilled:hover {
                background-color: #78fe73;
                font-size: 10px;
            }

        td.AssignmentCellOver {
            border: 1px solid #dddddd;
            padding: 3px;
            text-align: center;
            vertical-align: middle;
            border: 1px solid #000000;
            height: 50px;
            width: 100px;
            white-space: nowrap;
            background-color: #ff9292;
            font-size: 10px;
        }

            td.AssignmentCellOver:hover {
                background-color: #ff6161;
                font-size: 10px;
            }

        td.EmployeeCell {
            text-align: center;
            vertical-align: middle;
            border: 1px solid #000000;
            height: 20px;
            background-color: #ff6161;
            white-space: nowrap;
            padding-left: 5px;
            padding-right: 5px;
        }

        .left-element {
            display: inline;
            float: left;
            margin-left: 10px;
        }

        .right-element {
            /*display: inline;*/
            float: right;
            margin-right: 30px;
        }

        .left-align {
            display: inline;
            float: left;
            padding: 5px;
            border-style: solid;
            border-width: 1px;
            text-align: center;
            font-size: 70%;
        }
    </style>

    @*lightboxes*@
    <style>
        .black_overlay {
            display: none;
            position: fixed;
            top: 0%;
            left: 0%;
            width: 100%;
            height: 100%;
            background-color: black;
            z-index: 1001;
            -moz-opacity: 0.8;
            opacity: .80;
            filter: alpha(opacity=80);
        }

        .white_content {
            position: fixed;
            top: 10%;
            left: 25%;
            z-index: 1050;
            width: 50%;
            height: 85%;
            /*margin-left: -280px;*/
            background-color: #ffffff;
            /*-webkit-border-radius: 20px;
            -moz-border-radius: 20px;*/
            border-radius: 20px;
            border: 2px solid #FFFFFF;
            background-color: #FFFFFF;
            -webkit-box-shadow: #000000 8px 8px 8px;
            -moz-box-shadow: #000000 8px 8px 8px;
            box-shadow: #000000 8px 8px 8px;
            display: none;
        }

        .white-header {
            padding: 9px 15px;
            border-bottom: 1px solid #eee;
            height: 30px;
        }

        .modal-header .close {
            margin-top: 2px;
        }

        a.close {
            padding: 0;
            cursor: pointer;
            border: 0;
            -webkit-appearance: none;
        }

        .close {
            float: right;
            font-size: 20px;
            font-weight: bold;
            line-height: 20px;
        }

        .white-body {
            position: relative;
            max-height: 850px;
            padding: 15px;
            overflow-y: auto;
            display: block;
        }
    </style>

    @*messages*@
    <style>
        .messagebox {
            padding: 20px;
            background-color: #e6e6e6;
            color: black;
            border-style: solid;
            border-color: black;
            border-width: .5px;
        }

        .approve {
            margin-left: 30px;
            color: #4cff00;
            font-weight: bold;
            float: right;
            font-size: 30px;
            line-height: 20px;
            cursor: pointer;
            transition: 0.3s;
        }

        .deny {
            margin-left: 15px;
            color: #ff3d3d;
            font-weight: bold;
            float: right;
            font-size: 30px;
            line-height: 20px;
            cursor: pointer;
            transition: 0.3s;
        }

        .approve:hover {
            color: black;
        }

        .deny:hover {
            color: black;
        }
    </style>

    @*messages dropdown*@
    <style>
        input.messages {
            display: none;
            visibility: hidden;
        }

        label.messages {
            display: block;
            padding: 0.5em;
            text-align: center;
            border-bottom: 1px solid #CCC;
            color: #666;
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

            label.messages:hover {
                color: #000;
            }

            label.messages::before {
                font-family: Consolas, monaco, monospace;
                font-weight: bold;
                font-size: 15px;
                content: "▼";
                vertical-align: text-top;
                display: inline-block;
                width: 20px;
                height: 20px;
                margin-right: 3px;
                background: radial-gradient(ellipse at center, #CCC 50%, transparent 50%);
            }

        #expand {
            height: 0px;
            overflow: auto;
            transition: height 0.5s;
            color: #FFF;
        }

        section {
            padding: 0 20px;
        }

        #toggle:checked ~ #expand {
            height: auto;
        }

        #toggle:checked ~ label::before {
            content: "-";
        }
    </style>

    @*employee availability*@
    <style>
        .EmployeeAvailableHours {
            border: 1px solid #000000;
            display: inline-block;
        }

        .EmpListAndHours {
            display: inline;
        }
    </style>

    <style>
        .mainalt {
            padding-left: 100px;
            padding-top: 100px;
            display: inline-block;
        }
    </style>

    <style>
        table.Schedule {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            border: 1px solid #000000;
            text-align: left;
            table-layout: fixed;
            word-break: break-all;
            margin-left: auto;
            margin-right: auto;
            empty-cells: show;
        }

        td.ScheduleCell:not(:first-child), th.ScheduleCell:not(:first-child) {
            padding: 8px;
            text-align: center;
            user-select: none;
            cursor: default;
        }

        td.ScheduleCell:first-child, th.ScheduleCell:first-child {
            padding: 8px;
            user-select: none;
            cursor: default;
            max-width: 100%;
            white-space: nowrap;
        }
    </style>

    <style>
        #WeekChange:hover {
            color: #3a7575;
            cursor: pointer;
        }
    </style>
</head>

<body>
    @*@if (Model.ThisWeek.employeeStatus == false)
        {
            <div class="mainalt">
                <h2>You don't have permission to view the page.</h2>
            </div>
            <br />
            <br />
        }
        else
        {*@
    <br />
    <div id="SelectedWeekDates" style="text-align:center; user-select: none;">
        <h2>Create Schedule (@Model.ThisWeek.RequestedDates[0].ToShortDateString() - @Model.ThisWeek.RequestedDates[6].ToShortDateString())</h2>
        <div id="WeekChange" style="font-size: 18px; float:right;" onclick="TwoWeeksSchedule()">Next Week >></div> <br />
    </div>
    <br>
    @*<a href="/Home/LaborSchedule" style="text-decoration: none;">*@
    @*<div id="WeekChange" style="font-size: 18px; float:right;" onclick="NextWeekSchedule()">Next Week >></div> <br />*@
    @*</a>*@
    <br>

    <input id="toggle" type="checkbox" class="messages">
    @Html.HiddenFor(m => m.ManagerMessageList.Count, new { id = "hiddenMessageCount" })
    <input type="hidden" id="hiddenMessageCounter" value=0>
    <label for="toggle" class="messages" id="messages">@Model.ManagerMessageList.Count Messages</label>
    <div id="expand">
        <section>
            @foreach (ManagerNotification notification in Model.ManagerMessageList)
            {
                int messageId = notification.messageId;

                <div class="messagebox">
                    <span class="approve" onclick="approveRequest(@messageId)">&#10003;</span>
                    <span class="deny" onclick="denyRequest(@messageId)">&times;</span>
                    <text style="font-size: 14px;">@notification.message</text>
                </div>
            }
        </section>
    </div>

    <br />
    <br />


    @using (Ajax.BeginForm("LaborSchedule", "Home", new AjaxOptions
    {
        HttpMethod = "post",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "LaborScheduleTable",
        OnBegin = "return checkInp()"
    },
                        new { id = "ScheduleForm", onkeydown = "return event.keyCode!=13" }))
    {
        <div style="overflow:auto">
            <div class="left-element">
                <div style="padding: 20px;">
                    <div>
                        <div class="left-element">
                            <label>Weekly Hours: </label><br />
                        </div>

                        <div class="left-element">
                            @Html.TextBoxFor(m => m.ThisWeek.PayrollWeeklyHours, new { id = "weeklyHours", style = "width:50px;", autocomplete = "off" })
                            <button type="submit" id="LaborScheduleButton" style="display:inline-block; margin-left: 30px;" @*onclick="CreateSchedule()"*@>Update</button>
                        </div>
                    </div>
                    <br />
                </div>
            </div>
        </div>

        <br />
            <br />

            <div id="LaborScheduleTable"></div>
            <div id="AssignmentTablePartial"></div>

            @Html.HiddenFor(m => m.ThisWeek.selectedEmployee, new { id = "hiddenEmployeeName" })
            @Html.HiddenFor(m => Model.ExcludedDates, new { id = "hiddenExcludedDates" })
            @Html.HiddenFor(m => Model.ThisWeek.ExcludedDates, new { id = "hiddenExcludedDatesData" })
            @Html.HiddenFor(m => Model.ThisWeek.selectedHour, new { id = "hiddenSelectedHour" })
            @Html.HiddenFor(m => Model.ThisWeek.startdateRequested, new { id = "hiddenRequestedDate" })
        <input type="hidden" id="LastDaySelected" value=""/>


    }

    <br />
    <br />
    @*}*@

</body>



@section scripts
{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

    <script type="text/javascript">
        $(function () {
            // Disable browser cache Ajax.ActionLinks
            $.ajaxSetup({ cache: false });
        });
    </script>

    <script>
        $(window).keypress(function (event) {
            if (event.which == 13) {
                document.forms[0].submit();
                // assuming that you have just one form on the whole page
            }
        });
    </script>

    @*search for an employee to add*@
    <script>
        //$(document).ready(function () {
        //    $("#EmployeeSearch").keypress(function (event) {
        //        if(event.keyCode == 13){
        //            alert('you pressed enter');
        //        }
        //    });
        //});

        function findEmployee(emp) {

            $("#FoundEmployee").html('<img style="display: block; margin-left: auto; margin-right: auto;" src="@Url.Content("~/Images/spinner.gif")" />');

            $.get('/Home/FindEmployee/?EmployeeId=' + emp, function (data) {
                //load partial to page
                $('#FoundEmployee').html(data);
            });
        }
    </script>

    @*add a found employee*@
    <script>
        function addEmployee(empid) {

            $("#AssignmentTablePartial").html('<img style="display: block; margin-left: auto; margin-right: auto;" src="@Url.Content("~/Images/spinner.gif")" /><br><br><br>');

            $.post('/Home/AddEmployee',
                {
                    EmployeeId: empid
                },
                function (data) {
                    $('#AssignmentTablePartial').html(data);
                }
                );
        }
    </script>

    @*remove a borrowed employee from the schedule*@
    <script>
        function RemoveEmployee(EmployeeId){

            $("#AssignmentTablePartial").html('<img style="display: block; margin-left: auto; margin-right: auto;" src="@Url.Content("~/Images/spinner.gif")" /><br><br><br>');

            $.post('/Home/RemoveEmployee',
    {
        EmployeeId: EmployeeId
    },
    function (data) {
        $('#AssignmentTablePartial').html(data);
    }
    );
        }
    </script>

    @*toggle whether the open hour is preceeded by a half hour or an hour*@
    <script>
        function ToggleStartHour(slots){
            $.post('/Home/ToggleHourSlots',
{
    slots: slots
},
function (data){
    $('#AssignmentTablePartial').html(data);
}
);
        }
    </script>

    @*add or subtract half hour slots from an assigned employee on the schedule*@
    <script>
        function AddHourStart(idHour){
            var splitValues = idHour.split(',');
            $.post('/Home/AddHourStart',
{
    employeeId: splitValues[0],
    hour: splitValues[1]
},
function (data){
    $('#AssignmentTablePartial').html(data);
}
);
        }

        function SubtractHourStart(idHour){
            var splitValues = idHour.split(',');
            $.post('/Home/SubtractHourStart',
{
    employeeId: splitValues[0],
    hour: splitValues[1]
},
function (data){
    $('#AssignmentTablePartial').html(data);
}
);
        }

        function SubtractHourEnd(idHour){
            var splitValues = idHour.split(',');
            $.post('/Home/SubtractHourEnd',
{
    employeeId: splitValues[0],
    hour: splitValues[1]
},
function (data){
    $('#AssignmentTablePartial').html(data);
}
);
        }

        function AddHourEnd(idHour) {
            var splitValues = idHour.split(',');
            $.post('/Home/AddHourEnd',
{
    employeeId: splitValues[0],
    hour: splitValues[1]
},
    function (data){
        $('#AssignmentTablePartial').html(data);

    }
    );

        }

    </script>

    @*update the schedule partial - not needed with form submit*@
    @*<script>
            function CreateSchedule(){
                var Date = document.getElementById("hiddenRequestedDate").value;

                $.post('/Home/_LaborScheduleAssignmentView',
        {
        },
        function (data){
            $('#LaborSchedule').html(data);
        }
        );
            }
        </script>*@

    @*determine which week to create a schedule for, change values when changing selection*@
    <script>
        function OneWeekSchedule() {
            var OneWeekStartDate = @Html.Raw(Json.Encode(Model.ThisWeek.startdateOneWeek));
            var OneWeekEndDate = @Html.Raw(Json.Encode(Model.ThisWeek.enddateOneWeek));

            document.getElementById("SelectedWeekDates").innerHTML = "<h2>Create Schedule (" + OneWeekStartDate + " - " + OneWeekEndDate + ")</h2><div id='WeekChange' style='font-size: 18px; float:right;' onclick='TwoWeeksSchedule()'>Next Week >></div> <br />";

            document.getElementById("hiddenRequestedDate").value = OneWeekStartDate;
        }

        function TwoWeeksSchedule() {
            var TwoWeeksStartDate = @Html.Raw(Json.Encode(Model.ThisWeek.startdateTwoWeeks));
            var TwoWeeksEndDate = @Html.Raw(Json.Encode(Model.ThisWeek.enddateTwoWeeks));

            document.getElementById("SelectedWeekDates").innerHTML = "<h2>Create Schedule (" + TwoWeeksStartDate + " - " + TwoWeeksEndDate + ")</h2><div id='WeekChange' style='font-size: 18px; float:left;' onclick='OneWeekSchedule()'><< Previous Week</div> <div id='WeekChange' style='font-size: 18px; float:right;' onclick='ThreeWeeksSchedule()'>Next Week >></div> <br />";

            document.getElementById("hiddenRequestedDate").value = TwoWeeksStartDate;
        }

        function ThreeWeeksSchedule() {
            var ThreeWeeksStartDate = @Html.Raw(Json.Encode(Model.ThisWeek.startdateThreeWeeks));
            var ThreeWeeksEndDate = @Html.Raw(Json.Encode(Model.ThisWeek.enddateThreeWeeks));

            document.getElementById("SelectedWeekDates").innerHTML = "<h2>Create Schedule (" + ThreeWeeksStartDate + " - " + ThreeWeeksEndDate + ")</h2><div id='WeekChange' style='font-size: 18px; float:left;' onclick='TwoWeeksSchedule()'><< Previous Week</div> <br />";

            document.getElementById("hiddenRequestedDate").value = ThreeWeeksStartDate;
        }
    </script>

    @*approve or deny a time off request*@
    <script>
        function approveRequest(messageId)
        {
            $.ajax({
                url: '/Home/approveRequest',
                data: { messageId: messageId},
                done: function() {
                    alert('success');
                },
                fail: function(){
                    alert('failure');
                }
            })
            alert('Request approved.');
            var messageCount = document.getElementById("hiddenMessageCount").value;
            var messageCountUpdate = messageCount - 1;
            document.getElementById("hiddenMessageCount").value = messageCountUpdate;

            document.getElementById("messages").innerHTML = messageCountUpdate + ' Messages';
        }

        function denyRequest(messageId)
        {
            $.ajax({
                url: '/Home/denyRequest',
                data: { messageId: messageId},
                done: function() {
                    alert('success');
                },
                fail: function(){
                    alert('failure');
                }
            })
            alert('Request denied.');
            var messageCount = document.getElementById("hiddenMessageCount").value;
            var messageCountUpdate = messageCount - 1;
            document.getElementById("hiddenMessageCount").value = messageCountUpdate;

            document.getElementById("messages").innerHTML = messageCountUpdate + ' Messages';
        }
    </script>

    @*remove a time off request from the screen when a button is clicked*@
    <script>
        $(document).ready(function(c) {
            $('.approve').on('click', function(c){
                $(this).parent().fadeOut('slow', function(c){
                });
            });
        });

        $(document).ready(function(c) {
            $('.deny').on('click', function(c){
                $(this).parent().fadeOut('slow', function(c){
                });
            });
        });
    </script>

    <script>
        function UpdateTotals(value){

            //alert('selected value: ' + value);        

            var Total = document.getElementById("TotalSuggested");
            if(Total){
                var days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

                var suggested = document.getElementById("TotalSuggested").innerHTML;
                var remaining = document.getElementById("TotalRemaining").innerHTML;
                var dayTotal = suggested - remaining;

                var lastValue = document.getElementById("LastDaySelected").value;

                //alert('current hidden last value: ' + lastValue);

                document.getElementById("DayTotal_"+days[lastValue]).innerHTML = dayTotal;

            }
            document.getElementById("LastDaySelected").value = value;
            //alert('updated hidden last value: ' + document.getElementById("LastDaySelected").value);


        }
    </script>
    @*open the assignment partial by clicking table buttons*@
    <script>
        function getValue(value){

            $("#AssignmentTablePartial").html('<img style="display: block; margin-left: auto; margin-right: auto;" src="@Url.Content("~/Images/spinner.gif")" /><br><br><br>');

            $.get('/Home/_LaborScheduleAssignmentView/?selectedColumn=' + value, function (data) {
                //load partial to page
                $('#AssignmentTablePartial').html(data);
                //$("#partialmodel").html(data);

            });


            //var myEle = document.getElementById("please");
            //if(myEle){
            //    var sun = myEle.value;
            //    alert(sun);

            //    var frig = document.getElementById("DayTotal_Sunday").innerHTML;
            //    alert(frig);

            //    document.getElementById("DayTotal_Sunday").innerHTML = sun;
            //}



            @*var myArray = '@Model.DayHourTotals[0]';*@

            @*@foreach (var d in Model.DayHourTotals)
            {
                @:myArray.push("@d");
            }*@
            //alert(myArray[0]);
            //alert(myArray.length);
        }
    </script>

    @*import last week's schedule or clear the selected week's schedule on button click*@
    <script>
        function importSchedule(){
            var result = confirm("Warning: This will replace the current schedule.");
            if (result) {

                $("#AssignmentTablePartial").html('<img style="display: block; margin-left: auto; margin-right: auto;" src="@Url.Content("~/Images/spinner.gif")" /><br><br><br>');

                $.post('/Home/ImportSchedule',
                    {
                    },
                    function (data){
                        $('#AssignmentTablePartial').html(data);
                    }
                    );

                var days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

                for (i = 0; i < days.length; i++) {
                    document.getElementById("DayTotal_"+days[i]).innerHTML = '-';
                }
            }
        }

        function clearSchedule(){
            var result = confirm("Warning: This will clear the current schedule.");
            if (result) {

                $("#AssignmentTablePartial").html('<img style="display: block; margin-left: auto; margin-right: auto;" src="@Url.Content("~/Images/spinner.gif")" /><br><br><br>');

                $.post('/Home/ClearSchedule',
                    {
                    },
                    function (data){
                        $('#AssignmentTablePartial').html(data);
                    }
                    );

                var days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

                for (i = 0; i < days.length; i++) {
                    document.getElementById("DayTotal_"+days[i]).innerHTML = '0';
                }
            }
        }
    </script>

    @*unassign an employee's block on a button click*@
    <script>
        function unassignBlock(employeeId, startTime){
            var start = startTime.value
            $.post('/Home/UnassignEmployeeBlock',
                {
                    employeeId: employeeId,
                    StartHour: start
                },
                function (data){
                    $('#AssignmentTablePartial').html(data);
                }
                );
        }

    </script>

    @*assign an employee at the selected hour on the assignment table*@
    <script>
        function assignEmployeeBlock(employeeId){
            var startHour = document.getElementById("hiddenSelectedHour").value;
            $.post('/Home/AssignEmployeeBlock',
                {
                    employeeId: employeeId,
                    startHour: startHour
                },
                function (data){
                    $('#AssignmentTablePartial').html(data);
                }
                );
        }
    </script>

    @*display the hour availability partial*@
    <script>
        function getHour(hour) {
            document.getElementById("hiddenSelectedHour").value = hour;

            $("#HourAvailability").html('<img style="display: block; margin-left: auto; margin-right: auto; margin-top: 40px;" src="@Url.Content("~/Images/spinner.gif")" />');

            $.get('/Home/_LaborScheduleHourAvailability/?selectedHour=' + hour, function (data) {
                $('#HourAvailability').html(data);
            });
        }
    </script>

    @*change the assignment cell if employees are filled*@
    <script>
        var table = document.getElementById("AssignmentTablePartial");
        if (table != null) {
            for (var i = 0, cell; cell = table.cells[i]; i++) {
                if(table[i][j] === 0 ){
                    selectedEmployeeCells[i].classList.add('AssignmentCellFilled')
                }
            }
        }
    </script>

    @*validate that input is a number*@
    <script>
        function checkInp()
        {
            var hours = document.getElementById("weeklyHours").value;
            if (isNaN(hours))
            {
                alert("Input must be numbers");
                return false;
            }
        }
    </script>

}