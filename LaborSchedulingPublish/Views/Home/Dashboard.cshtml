@using System
@using System.Collections.Generic
@using System.Linq
@using System.Web
@using System.Web.Mvc
@using System.Data.SqlClient
@using System.Data
@using System.Configuration
@using System.Text
@using System.Diagnostics;
@using System.Web.UI.HtmlControls;
@using System.Data.Entity;
@using LaborNeedsScheduling.Models
@model Dashboard

<head>

    <style>
        .approved {
            padding: 20px;
            background-color: #8fff9a;
            color: black;
            border-style: solid;
            border-color: black;
            border-width: .5px;
            border-radius: 25px;
            width: 230px;
        }

            .approved:hover {
                background-color: #64ff74;
                cursor: pointer;
            }
    </style>

    <style>
        table.Schedule {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            width: 100%;
            border: 1px solid #dddddd;
            text-align: left;
            table-layout: fixed;
            word-break: break-all;
            margin-left: auto;
            margin-right: auto;
            empty-cells: show;
            font-size: 12px;
            user-select: none;
        }

        td:not(:first-child), th:not(:first-child) {
            padding: 5px;
            text-align: center;
            border: 1px solid #000000;
            user-select: none;
            cursor: default;
            word-wrap: break-word;
        }

        td:first-child, th:first-child {
            border: 1px solid #000000;
            padding: 5px;
            user-select: none;
            cursor: default;
            /*max-width: 100%;*/
            white-space: nowrap;
            word-wrap: break-word;
        }
    </style>

    <style>
        #WeekChange:hover {
            color: #3a7575;
            cursor: pointer;
        }

        .WeekChange {
            user-select: none;
        }
    </style>

    <style>
        .StoreCode {
            display: inline-block;
            font-size: 16px;
        }

            .StoreCode:hover {
                color: #004979;
                cursor: pointer;
            }
    </style>

</head>

<body>

    @*<br />
    <br />

    <input type="range" min="0" max="5" value="3" id="fader">
    <input id="ex2" type="text" class="span2" value="" data-slider-min="10" data-slider-max="1000" data-slider-step="5" data-slider-value="[250,450]" />*@

    <div id="DashboardDisplay">

        @if (Model.DMStoreSelect == true)
        {
            <br />
            <h1>Select a store to view</h1>
            <br />

            for (int i = 0; i < Model.DistrictStores.Count; i++)
            {
                <div style="color:#009aff;" class="StoreCode" id="@Model.DistrictStores[i]" onclick="SelectStore(this.id)">@Model.DistrictStores[i]</div>
                <br />
            }
        }
        else
        {
            if (Model.DMCurrentUser == true)
            {
                <br />
                <h4> Current Store: @Model.SelectedStore</h4>
                <br />
                <button style="float:left" type="button" onclick="ResetStoreCode()">Change Location</button>
                <br />
            }

            <br />
                <button style="float:right" type="button" onclick="Print()">Print Schedule</button>
                <br />

                <h1 style="text-align:center">Schedule</h1>

                <div id="SelectedWeekDates" style="text-align:center">
                    <h2>Schedule for @Model.CurrentWeekDates[0].ToShortDateString() - @Model.CurrentWeekDates[6].ToShortDateString()</h2>
                    <div id="WeekChange" class="WeekChange" style="font-size: 18px; float:right;" onclick="OneWeekSchedule();CreateSchedule()">Next Week >></div> <br />
                </div>

                <div id="WeekSchedule">
                    <div class="white-body">
                        <table border="1" cellpadding="5" id="weekhours" class="Schedule">
                            <thead>
                                <tr>
                                    <th style="text-align: center">Name</th>
                                    @for (int i = 0; i < Model.CurrentWeekDates.Length; i++)
                                    {
                                        <th>
                                            @Model.CurrentWeekDates[i].DayOfWeek
                                            <br />
                                            @Model.CurrentWeekDates[i].ToShortDateString()
                                        </th>
                                    }
                                    <th>Hours</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{ double weekHourTotal = 0;}
                                @{ double[] dayTotals = new double[7];}
                                @foreach (Employees emp in Model.EmployeeListStore)
                                {
                                    double[] employeeDayHourCount = new double[7];
                                    double weekHourAmount = 0;
                                    double dayHourCount = 0;

                                    <tr>
                                        @{string name = emp.firstName + " " + emp.lastName[0] + ".";}
                                        <td style="font-weight:bold">@name</td>
                                        @for (int n = 0; n < 7; n++)
                                        {
                                            List<string> startTime = new List<string>();
                                            List<string> endTime = new List<string>();
                                            for (int i = 0; i < Model.AssignedEmployeesRequestedWeek.Rows.Count; i++)
                                            {
                                                if (emp.id == Model.AssignedEmployeesRequestedWeek.Rows[i][1].ToString() && Model.CurrentWeekDates[n] == Convert.ToDateTime(Model.AssignedEmployeesRequestedWeek.Rows[i][3]))
                                                {
                                                    bool block = false;
                                                    double hourcount = 0;
                                                    for (int m = 0; m < Model.ScheduleHalfHourSlots.Length; m++)
                                                    {
                                                        if (Model.AssignedEmployeesRequestedWeek.Rows[i][4].ToString() == Model.SQLHours[m])
                                                        {
                                                            startTime.Add(Model.ScheduleHalfHourSlots[m]);
                                                            block = true;
                                                        }
                                                        if (Model.AssignedEmployeesRequestedWeek.Rows[i][5].ToString() == Model.SQLHours[m])
                                                        {
                                                            endTime.Add(Model.ScheduleHalfHourSlots[m]);
                                                            block = false;
                                                        }
                                                        if (block == true)
                                                        {
                                                            weekHourAmount += .5;
                                                            hourcount += .5;
                                                            dayHourCount += .5;
                                                        }
                                                    }

                                                    if (hourcount > 4)
                                                    {
                                                        hourcount = hourcount - .5;
                                                        dayHourCount = dayHourCount - .5;
                                                    }
                                                    dayTotals[n] += hourcount;
                                                }
                                            }
                                            <td>

                                                @for (int m = 0; m < startTime.Count; m++)
                                                {
                                                    <text>@startTime[m] - @endTime[m]</text>
                                                    <br />
                                                }
                                            </td>
                                        }
                                        <td>@dayHourCount</td>
                                    </tr>
                                            }
                                <tr>
                                    <td style="font-weight:bold">Total</td>
                                    @for (int i = 0; i < 7; i++)
                                    {
                                        <td>@dayTotals[i]</td>
                                        weekHourTotal += dayTotals[i];
                                    }
                                    <td style="font-weight:bold">@weekHourTotal</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>


                @Html.HiddenFor(m => Model.startdateRequested, new { id = "hiddenRequestedDate" })
                                            }
    </div>
</body>

@section scripts{

<script type="text/javascript">
    $(function () {
        // Disable browser cache Ajax.ActionLinks
        $.ajaxSetup({ cache: false });
    });
</script>

    <script>
        function Print(event) {
            var prtContent = document.getElementById("weekhours");
            //prtContent.border = 0; //set no border here
            var WinPrint = window.open('', '', 'left=100,top=100,width=1000,height=1000,toolbar=0,scrollbars=1,status=0,resizable=1');
            WinPrint.document.write(prtContent.outerHTML);
            WinPrint.document.close();
            WinPrint.focus();
            WinPrint.print();
            WinPrint.close();
        };
    </script>

    <script>
        function CreateSchedule(){
            var Date = document.getElementById("hiddenRequestedDate").value;

            $("#WeekSchedule").html('<br><br><br><img style="display: block; margin-left: auto; margin-right: auto;" src="@Url.Content("~/Images/spinner.gif")" /><br><br><br>');

            $.post('/Home/Dashboard',
    {
        RequestedDate: Date
    },
    function (data){
        $('#WeekSchedule').html(data);
    }
    );
        }
    </script>

    <script>
        function CurrentWeekSchedule() {
            var CurrentWeekStartDate = @Html.Raw(Json.Encode(Model.startdateCurrentWeek));
            var CurrentWeekEndDate = @Html.Raw(Json.Encode(Model.enddateCurrentWeek));

            document.getElementById("SelectedWeekDates").innerHTML = "<h2>Schedule for " + CurrentWeekStartDate + " - " + CurrentWeekEndDate + "</h2><div id='WeekChange' class='WeekChange' style='font-size: 18px; float:right;' onclick='OneWeekSchedule();CreateSchedule()'>Next Week >></div> <br />";

            document.getElementById("hiddenRequestedDate").value = CurrentWeekStartDate;
        }
    </script>

    <script>
        function OneWeekSchedule() {
            var OneWeekStartDate = @Html.Raw(Json.Encode(Model.startdateOneWeek));
            var OneWeekEndDate = @Html.Raw(Json.Encode(Model.enddateOneWeek));

            document.getElementById("SelectedWeekDates").innerHTML = "<h2>Schedule for " + OneWeekStartDate + " - " + OneWeekEndDate + "</h2><div id='WeekChange' class='WeekChange' style='font-size: 18px; float:left;' onclick='CurrentWeekSchedule();CreateSchedule()'><< Previous Week</div><div id='WeekChange' class='WeekChange' style='font-size: 18px; float:right;' onclick='TwoWeeksSchedule();CreateSchedule()'>Next Week >></div> <br />";

            document.getElementById("hiddenRequestedDate").value = OneWeekStartDate;
        }
    </script>

    <script>
        function TwoWeeksSchedule() {
            var TwoWeeksStartDate = @Html.Raw(Json.Encode(Model.startdateTwoWeeks));
            var TwoWeeksEndDate = @Html.Raw(Json.Encode(Model.enddateTwoWeeks));

            document.getElementById("SelectedWeekDates").innerHTML = "<h2>Schedule for " + TwoWeeksStartDate + " - " + TwoWeeksEndDate + "</h2><div id='WeekChange' class='WeekChange' style='font-size: 18px; float:left;' onclick='OneWeekSchedule();CreateSchedule()'><< Previous Week</div> <div id='WeekChange' class='WeekChange' style='font-size: 18px; float:right;' onclick='ThreeWeeksSchedule();CreateSchedule()'>Next Week >></div> <br />";

            document.getElementById("hiddenRequestedDate").value = TwoWeeksStartDate;
        }
    </script>

    <script>
        function ThreeWeeksSchedule() {
            var ThreeWeeksStartDate = @Html.Raw(Json.Encode(Model.startdateThreeWeeks));
            var ThreeWeeksEndDate = @Html.Raw(Json.Encode(Model.enddateThreeWeeks));

            document.getElementById("SelectedWeekDates").innerHTML = "<h2>Schedule for " + ThreeWeeksStartDate + " - " + ThreeWeeksEndDate + "</h2><div id='WeekChange' class='WeekChange' style='font-size: 18px; float:left;' onclick='TwoWeeksSchedule();CreateSchedule()'><< Previous Week</div> <br />";

            document.getElementById("hiddenRequestedDate").value = ThreeWeeksStartDate;
        }
    </script>

    <script>
        function SelectStore(StoreCode){
            $.get('/Home/Dashboard/?SelectedStore=' + StoreCode, function (data) {
                //load partial to page
                $('#DashboardDisplay').html(data);
            });
        }
    </script>

    <script>
        function ResetStoreCode(){
            $.get('/Home/DMDashboard/?ResetLocation=true', function (data) {
                //load partial to page
                $('#DashboardDisplay').html(data);
            });
        }
    </script>

    @*<script>
            function NextWeekSchedule() {
                $.get('/Home/_DashboardNextWeekSchedule', function (data) {

                    //load partial to page
                    $('#WeekSchedule').html(data);
                });
            }
        </script>

        <script>
            function CurrentWeekSchedule() {
                $.get('/Home/_DashboardCurrentWeekSchedule', function (data) {

                    //load partial to page
                    $('#WeekSchedule').html(data);
                });
            }
        </script>*@

}