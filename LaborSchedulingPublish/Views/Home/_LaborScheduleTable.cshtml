@using System
@using System.Collections.Generic
@using System.Linq
@using System.Web
@using System.Web.Mvc
@using System.Data.SqlClient
@using System.Data
@using System.Configuration
@using System.Text
@using System.Diagnostics;
@using System.Web.UI.HtmlControls;
@using System.Data.Entity;
@using LaborNeedsScheduling.Models
@model LaborScheduling

<body>


    <h4>Hours: @Model.ThisWeek.PayrollWeeklyHours</h4>
    @{ double hours = 0;}

    @for (int i = 1; i < 8; i++)
    {
        for (int n = 0; n < Model.ThisWeek.LaborSchedule.Rows.Count; n += 2)
        {
            if (Model.ThisWeek.LaborSchedule.Rows[n][i].ToString() != "")
            {
                double hour = Convert.ToDouble(Model.ThisWeek.LaborSchedule.Rows[n][i]);
                hours += hour;
            }
        }
    }
    @*<h4>Suggested: @hours</h4>*@

    @*table*@
    <div style="display:inline-block; padding-top:30px;">
        <table class="LaborSchedule" id="LaborSchedule" border="1" cellpadding="5" align="center">
            <thead>
                <tr>
                    @foreach (DataColumn c in Model.ThisWeek.LaborSchedule.Columns)
                    {
                        if (c.ToString() == "HourOfDay")
                        {
                            <th class="LaborCell">Hour</th>
                        }
                        else
                        {
                            <th class="LaborCell">@c.Caption</th>
                        }
                    }
                </tr>

            </thead>
            @if (Model.ThisWeek.LaborSchedule.Columns.Count > 0)
            {
                int dayValue = 0;
                <tbody>

                    @{int count = 0;}

                    @for (int j = 0; j <= Model.ThisWeek.LaborSchedule.Rows.Count; j++)
                    {
                        bool ignoreRow = false;
                        int blackoutCell = 0;
                        for (int h = 1; h < 8; h++)
                        {
                            if (Model.ThisWeek.BlackoutTimes != null && j < Model.ThisWeek.LaborSchedule.Rows.Count && Model.ThisWeek.BlackoutTimes.Rows[j][h].ToString() == "True")
                            {
                                blackoutCell++;
                            }
                            if (blackoutCell == 7)
                            {
                                ignoreRow = true;
                                count += 8;
                            }
                        }
                        if (ignoreRow == false)
                        {
                            <tr>
                                @for (int h = 0; h < 8; h++)
                                {
                                    if (j < Model.ThisWeek.LaborSchedule.Rows.Count)
                                    {
                                        if (Model.ThisWeek.BlackoutTimes != null && Convert.ToString(Model.ThisWeek.BlackoutTimes.Rows[j][h]) == "True")
                                        {
                                            <td class="BlackoutCell" id="cell"></td>
                                            count++;
                                        }
                                        else
                                        {

                                            @*if (Model.ThisWeek.LowHourCells[count] == true)
                                                {
                                                    <td class="LowCell" id="cell">@Model.ThisWeek.LaborSchedule.Rows[j][h]</td>
                                                    count++;
                                                }
                                                else*@
                                if (Model.ThisWeek.PowerHourCells[count] == true)
                                {
                                    <td class="PowerCell" id="cell">@Model.ThisWeek.LaborSchedule.Rows[j][h]</td>
                                    count++;
                                }
                                else
                                {
                                    if (h > 0 && Model.ThisWeek.LaborSchedule.Rows[j][0] == Model.ThisWeek.WeekStartEndHours.Rows[0][h - 1])
                                    {
                                        <td style="background-color:#eee0ff" class="LaborCell" id="cell">@Model.ThisWeek.LaborSchedule.Rows[j][h]</td>
                                    }
                                    else
                                    {
                                        <td class="LaborCell" id="cell">@Model.ThisWeek.LaborSchedule.Rows[j][h]</td>
                                            }
                                            count++;
                                        }
                                    }
                                }
                                // adding row for buttons
                                else if (h == 0 && j == Model.ThisWeek.LaborSchedule.Rows.Count)
                                {
                                    <td></td>
                                    }
                                    else if (h > 0 && j == Model.ThisWeek.LaborSchedule.Rows.Count)
                                    {
                                        string currentDay;
                                        {
                                            string[] weekdays = { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" };

                                            currentDay = weekdays[dayValue];
                                        }
                                        string[] buttonColors = { "#ffb9b9", "#f8ffb9", "#b9f9ff", "#ffdab9", "#b9ffd4", "#ffb5ca", "#d2b9ff" };
                                        string[] buttonBorders = { "#bf8989", "#bfbf89", "#89bfbf", "#bfac89", "#8bbf89", "#bf8999", "#9e89bf" };

                                        var days = Html.Raw(Json.Encode(ViewBag.days));
                                        <td class="ButtonCell" id="cell">
                                            <button onclick="getValue(this.value)" id="LaborSchedule" class="DaySelectionButton" 
                                                    style="background-color:@buttonColors[dayValue]; border-color:@buttonBorders[dayValue];" 
                                                    type="button" value=@dayValue>
                                                @currentDay
                                            </button>
                                        </td>
                                        dayValue++;
                                    }
                                }
                            </tr>
                        }
                    }
                    <tr>
                        <td style="padding:5px; font-weight:bold">Suggested Total</td>
                        @for (int i = 1; i < 8; i++)
                        {
                            double hourtotal = 0;

                            for (int n = 0; n < Model.ThisWeek.LaborSchedule.Rows.Count; n++)
                            {
                                if (Model.ThisWeek.LaborSchedule.Rows[n][i].ToString() != "")
                                {
                                    double hour = Convert.ToDouble(Model.ThisWeek.LaborSchedule.Rows[n][i]);
                                    hourtotal += hour;
                                }
                            }
                            hourtotal = hourtotal / 2;
                            <td style="padding:5px;text-align:center">@hourtotal</td>
                        }
                    </tr>
                    <tr>
                        <td style="padding:5px; font-weight:bold">Current Total</td>
                        @for (int i = 0; i < 7; i++)
                        {
                            <td style="padding:5px;text-align:center">@Model.ThisWeek.DayHourTotals[i]</td>
                        }
                    </tr>
                </tbody>
                        }
        </table>

        <br />
        <br />
        <br />

    </div>


    <div class="EmpListAndHours" style="padding-bottom:50px;">
        <div id="AssignmentTablePartial"></div>
    </div>

    @Html.HiddenFor(m => m.ThisWeek.selectedEmployee, new { id = "hiddenEmployeeName" })
    @Html.HiddenFor(m => Model.ExcludedDates, new { id = "hiddenExcludedDates" })
    @Html.HiddenFor(m => Model.ThisWeek.ExcludedDates, new { id = "hiddenExcludedDatesData" })


    <br />
    <br />
</body>